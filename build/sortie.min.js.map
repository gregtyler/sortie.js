{"version":3,"sources":["sortie.js"],"names":["root","factory","define","amd","module","exports","Sortie","this","SortieConstructor","strReverse","str","split","reverse","join","parseDate","format","parts","replace","match","type","start","substr","length","Date","yyyy","mm","dd","hh","ii","ss","textContent","node","SortieInstance","el","options","getOptions","dataAttr","$table","data","dataOptions","key","normkey","toLowerCase","$","extend","defaults","init","sorts","sort","attr","$headers","console","error","aria-atomic","aria-live","aria-relevant","col","$button","css","backgroundColor","border","html","markers","unsorted","aria-controls","eq","whiteSpace","cursor","click","sortFactory","sortie","sortieCompareFunction","compareFactory","sortieButton","append","initialsort","opts","toString","dir","i","l","parseInt","$th","$btn","rows","Array","prototype","slice","call","$body","find","get","current","desc","asc","not","each","index","$el","removeAttr","frag","document","createDocumentFragment","tbody","appendChild","innerHTML","trigger","sortSpec","bits","operation","args","callback","compareFunctions","a","b","cellA","children","cellB","order","window","obj","create","registerComparison","codes","attachTojQuery","jQuery","method","jquery","fn","apply","arguments","command","Object","defineProperty","getOwnPropertyDescriptor","Element","innerText","set","s","ah","trim","bh","localeCompare","dateFormat","dateA","dateB","aInt","bInt","isNaN"],"mappings":"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","file":"sortie.min.js","sourcesContent":["/*!\n * Sortie.js v<<VERSION>>\n * An inoffensive table sorter for developers\n */\n(function(root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define([], factory);\n    } else if (typeof module === 'object' && module.exports) {\n        // Node. Does not work with strict CommonJS, but only CommonJS-like\n        // environments that support module.exports, like Node.\n        module.exports = factory();\n    } else {\n        // Browser globals (root is window)\n        root.Sortie = factory();\n    }\n}(this, function SortieConstructor() { // jscs:ignore requirePaddingNewLinesAfterBlocks\n    'use strict';\n\n    /**\n     * Variable definitions\n     */\n    var defaults = {\n        initialsort: -1,\n        markers: {\n            asc: '&#8595;',\n            desc: '&#8593;',\n            unsorted: '&#8597;'\n        }\n    };\n\n    var compareFunctions = {};\n\n    // A polyfill for textContent\n    if (Object.defineProperty\n      && Object.getOwnPropertyDescriptor\n      && Object.getOwnPropertyDescriptor(Element.prototype, 'textContent')\n      && !Object.getOwnPropertyDescriptor(Element.prototype, 'textContent').get) {\n      var innerText = Object.getOwnPropertyDescriptor(Element.prototype, 'innerText');\n      Object.defineProperty(Element.prototype, 'textContent', {\n          get: function() {\n            return innerText.get.call(this);\n          },\n          set: function(s) {\n            return innerText.set.call(this, s);\n          }\n        }\n      );\n    }\n\n    /**\n     * Reverse a string\n     */\n    function strReverse(str) {\n        return str.split('').reverse().join('');\n    }\n\n    /**\n     * Parse a date from a format\n     * e.g. parseDate('1990-07-26 07:24', 'yyyy-mm-ss hh:ii')\n     */\n    function parseDate(str, format) {\n        var parts = {};\n        if (typeof format === 'undefined') format = 'yyyy-mm-dd';\n        format.replace(/(dd|mm|yyyy|hh|ii)/g, function(match, type, start) {\n            parts[type] = str.substr(start, type.length);\n        });\n\n        return new Date(\n            parts.yyyy || 0,\n            (parts.mm - 1) || 0,\n            parts.dd || 1,\n            parts.hh || 0,\n            parts.ii || 0,\n            parts.ss || 0\n        );\n    }\n\n    /**\n     * Get the text content of a node\n     */\n    function textContent(node) {\n        return node.textContent;\n    }\n\n    function SortieInstance(el, options) {\n        // Get the variables we'll be using in this sortie object\n        var $table = $(el);\n        var $body = $table.find('tbody').eq(0);\n        var $headers = $table.find('thead th');\n        var current;\n\n        /**\n        * Get the options object\n        */\n        function getOptions() {\n            var dataAttr = $table.data();\n            var dataOptions = {};\n            for (var key in dataAttr) {\n                if (key.substr(0, 6) === 'sortie' && key.length > 6) {\n                    var normkey = key.toLowerCase().replace(/-/g, '');\n                    dataOptions[normkey.substr(6)] = dataAttr[key];\n                }\n            }\n\n            return $.extend(true, {}, defaults, options, dataOptions);\n        }\n\n        /**\n         * Initialise sortie\n         */\n        function init() {\n            // Set the options object\n            options = getOptions();\n\n            // Determine the sort order\n            var sorts = options.sort || $table.attr('data-sortie');\n            if (!typeof sorts !== 'object') {\n                sorts = sorts.split('|');\n            }\n\n            if (sorts.length > $headers.length) {\n                console.error('Sortie config error: Too many sort columns specified');\n            }\n\n            // Add aria role-live settings and\n            $table.attr({\n                'aria-atomic': true,\n                'aria-live': 'polite',\n                'aria-relevant': 'all'\n            });\n\n            // Generate an ID for the table\n            if (!$table.attr('id')) {\n                $table.attr('id', 'sortieTable' + (new Date() * 1));\n            }\n\n            // Add sortie specification to each column\n            for (var col in sorts) {\n                // Skip columns with no sort criteria\n                if (!sorts[col]) continue;\n\n                // Add a sorting icon to click\n                var $button = $('<button />').css({backgroundColor: 'transparent', border: 'none'}).html(options.markers.unsorted);\n                $button.attr({\n                   type: 'button',\n                   'aria-controls': $table.attr('id')\n                });\n                $headers.eq(col)\n                    .css({whiteSpace: 'nowrap', cursor: 'pointer'})\n                    .click(sortFactory(col))\n                    .data({\n                        sortie: true,\n                        sortieCompareFunction: compareFactory(col, sorts[col]),\n                        sortieButton: $button\n                    })\n                    .append(' ', $button);\n            }\n\n            // Perform an initial sort\n            if (options.initialsort !== false) {\n                var opts = {};\n                if (options.initialsort.toString().substr(-1, 1) === 'D') {\n                    opts.dir = 'DESC';\n                } else if (options.initialsort.toString().substr(-1, 1) === 'A') {\n                    opts.dir = 'ASC';\n                } else if (options.initialsort.toString() === '-1') {\n                    for (var i = 0, l = sorts.length; i < l; i++) {\n                        if (sorts[i]) {\n                            options.initialsort = i;\n                            break;\n                        }\n                    }\n                }\n\n                sort(options.initialsort, opts);\n            }\n        }\n\n        // Factory for the sort function\n        function sortFactory(col) {\n            return function() {\n                sort(col);\n            }\n        }\n\n        /**\n         * Sort the table by the given column\n         */\n        function sort(col, opts) {\n            // Convert col to an integer\n            col = parseInt(col, 10);\n\n            var opts = $.extend({}, opts);\n            var $th = $headers.eq(col);\n            var $btn = $th.data('sortieButton');\n            var rows = Array.prototype.slice.call($body.find('tr').get(), 0);\n            var dir = typeof opts.dir !== 'undefined' ? opts.dir : 'ASC';\n\n            // Get the sort order\n            if (current === col && $th.data('sortieDirection') === 'ASC' && typeof opts.dir == 'undefined') {\n                dir = 'DESC';\n            }\n\n            // Save the new state\n            current = col;\n            $th.data('sortieDirection', dir);\n            $th.attr('aria-sort', dir.toLowerCase() + 'ending')\n\n            // Perform the sort\n            rows.sort($th.data('sortieCompareFunction'));\n\n            // Update the button's HTML\n            if (dir === 'DESC') {\n                $btn.html(options.markers.desc);\n                rows = rows.reverse();\n            } else {\n                $btn.html(options.markers.asc);\n            }\n\n            // Update the other buttons\n            $headers.not($th).each(function(index, el) {\n                var $el = $(el);\n                $el.removeAttr('aria-sort');\n                if ($el.data('sortie')) {\n                    $el.data('sortieButton').html(options.markers.unsorted);\n                }\n            });\n\n            // Update the content of the now-sorted table\n            var frag = document.createDocumentFragment();\n            var tbody = $body.get(0);\n\n            for (var i in rows) {\n                frag.appendChild(rows[i]);\n            }\n\n            // Put the now sorted rows back onto the page\n            tbody.innerHTML = '';\n            tbody.appendChild(frag);\n\n            $table.trigger('sortie:sorted');\n        }\n\n        /**\n         * Return the suitable comparison function for the column\n         */\n        function compareFactory(col, sortSpec) {\n            var bits = sortSpec.split(':');\n            var operation = bits[0];\n            var args = bits[1] ? bits[1].split(',') : [];\n            var callback = compareFunctions[operation];\n\n            if (typeof callback !== 'function') {\n                console.error('Sortie error: comparison function not found for rule \"' + operation + '\"');\n                var callback = function() {return 0};\n            }\n\n            return function compare(a, b) {\n                var cellA = a.children[col];\n                var cellB = b.children[col];\n\n                var order = callback.call(window, cellA, cellB, args);\n\n                // If asked to, reverse the search order\n                return sortSpec.substr(1, 1) === 'r' ? -order : order;\n            }\n        }\n\n        // Run the initialisation\n        init();\n\n        // Return values\n        var obj = { sort: sort };\n        $table.data('mySortieInstance', obj);\n        return obj;\n    }\n\n    // Create a new sortie instance\n    function create(el, options) {\n        return new SortieInstance(el, options);\n    }\n\n    // Register a new comparison function\n    function registerComparison(codes, callback) {\n        if (typeof codes === 'string') codes = [codes];\n\n        // Register against each code provided\n        for (var i = 0, l = codes.length; i < l; i++) {\n            compareFunctions[codes[i]] = callback;\n        }\n    }\n\n    /*** Comparison functions ***/\n\n    // Compare alphanumerically\n    registerComparison(['a', 'alpha'], function compareAlpha(cellA, cellB) {\n        var ah = textContent(cellA).trim();\n        var bh = textContent(cellB).trim();\n        if (cellA.dir === 'rtl') ah = strReverse(ah);\n        if (cellB.dir === 'rtl') bh = strReverse(bh);\n        return ah.localeCompare(bh);\n    });\n\n    // Compare by date attributes\n    registerComparison(['d', 'date'], function compareData(cellA, cellB, args) {\n        var dateFormat = args[0];\n        var dateA = parseDate(textContent(cellA), dateFormat);\n        var dateB = parseDate(textContent(cellB), dateFormat);\n\n        if (dateA > dateB) {\n            return 1;\n        } else if (dateB < dateA) {\n            return -1;\n        } else {\n            return 0;\n        }\n    });\n\n    // Compare integers\n    registerComparison(['i', 'int'], function compareInt(cellA, cellB) {\n        var aInt = parseInt(textContent(cellA), 10);\n        var bInt = parseInt(textContent(cellB), 10);\n        if (isNaN(bInt)) {\n            return isNaN(aInt) ? 0 : 1;\n        } else if (isNaN(aInt)) {\n            return -1;\n        } else {\n            return aInt - bInt;\n        }\n    });\n\n    /**\n     * Attach functionality to the supplied jQuery object\n     */\n    function attachTojQuery(jQuery, method) {\n        // Default object to global jQuery\n        if (typeof jQuery === 'undefined') jQuery = window.jQuery;\n        // Default method to \"sortie\"\n        if (typeof method === 'undefined') method = 'sortie';\n\n        // Not valid jQuery object\n        if (typeof jQuery !== 'function' || typeof $().jquery !== 'string') {\n            console.error('Invalid jQuery object supplied');\n            return false;\n        }\n\n        // Add sortie to jQuery under the specified method\n        jQuery.fn[method] = function(options) {\n            var args = Array.prototype.slice.apply(arguments);\n\n            return $(this).each(function() {\n                if (typeof options === 'string') {\n                    var command = options;\n                    $(this).data('mySortieInstance')[command](args.slice(1));\n                } else {\n                    if (!$(this).data('mySortieInstance')) {\n                        var Sortie = new SortieConstructor();\n                        Sortie.create(this, options);\n                    }\n                }\n            });\n        }\n    }\n\n    /**\n     * Return public methods\n     */\n    return {\n        attachTojQuery: attachTojQuery,\n        registerComparison: registerComparison,\n        create: create\n    };\n}));\n"],"sourceRoot":"/source/"}