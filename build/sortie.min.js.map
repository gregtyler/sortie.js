{"version":3,"sources":["sortie.js"],"names":["root","factory","define","amd","module","exports","Sortie","this","strReverse","str","split","reverse","join","parseDate","format","parts","replace","match","type","start","substr","length","Date","yyyy","mm","dd","hh","ii","ss","textContent","node","SortieInstance","$table","options","getOptions","dataAttr","attributes","dataOptions","i","l","attr","name","normkey","toLowerCase","value","Object","assign","defaults","init","sorts","sort","getAttribute","$headers","console","error","setAttribute","col","$button","document","createElement","style","backgroundColor","border","innerHTML","markers","unsorted","$header","whiteSpace","cursor","addEventListener","sortFactory","_data","set","compareFactory","appendChild","createTextNode","initialsort","opts","toString","dir","parseInt","$th","$btn","get","rows","Array","prototype","slice","call","$body","querySelectorAll","current","desc","asc","$el","removeAttribute","frag","createDocumentFragment","sortSpec","bits","operation","args","callback","compareFunctions","a","b","cellA","children","cellB","order","window","querySelector","create","el","registerComparison","codes","target","undefined","TypeError","output","index","arguments","source","nextKey","hasOwnProperty","defineProperty","getOwnPropertyDescriptor","Element","innerText","s","getIndex","$obj","data","__obj","push","key","val","ah","trim","bh","localeCompare","dateFormat","dateA","dateB","aInt","bInt","isNaN"],"mappings":"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","file":"sortie.min.js","sourcesContent":["/*!\n * Sortie.js v<<VERSION>>\n * An inoffensive table sorter for developers\n */\n(function(root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define([], factory);\n    } else if (typeof module === 'object' && module.exports) {\n        // Node. Does not work with strict CommonJS, but only CommonJS-like\n        // environments that support module.exports, like Node.\n        module.exports = factory();\n    } else {\n        // Browser globals (root is window)\n        root.Sortie = factory();\n    }\n}(this, function SortieConstructor() { // jscs:ignore requirePaddingNewLinesAfterBlocks\n    'use strict';\n\n    /**\n     * Variable definitions\n     */\n    var defaults = {\n        initialsort: -1,\n        markers: {\n            asc: '&#8595;',\n            desc: '&#8593;',\n            unsorted: '&#8597;'\n        }\n    };\n\n    var compareFunctions = {};\n\n    // A polyfill for Object.assign\n    if (typeof Object.assign != 'function') {\n      Object.assign = function(target) {\n        if (target === undefined || target === null) {\n          throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        var output = Object(target);\n        for (var index = 1; index < arguments.length; index++) {\n          var source = arguments[index];\n          if (source !== undefined && source !== null) {\n            for (var nextKey in source) {\n              if (source.hasOwnProperty(nextKey)) {\n                output[nextKey] = source[nextKey];\n              }\n            }\n          }\n        }\n        return output;\n      };\n    }\n\n    // A polyfill for textContent\n    if (Object.defineProperty\n      && Object.getOwnPropertyDescriptor\n      && Object.getOwnPropertyDescriptor(Element.prototype, 'textContent')\n      && !Object.getOwnPropertyDescriptor(Element.prototype, 'textContent').get) {\n      var innerText = Object.getOwnPropertyDescriptor(Element.prototype, 'innerText');\n      Object.defineProperty(Element.prototype, 'textContent', {\n          get: function() {\n            return innerText.get.call(this);\n          },\n          set: function(s) {\n            return innerText.set.call(this, s);\n          }\n        }\n      );\n    }\n\n    // A little internal data tracker\n    var _data = (function() {\n        var data = [];\n\n        function getIndex($obj) {\n            for (var index = 0, l = data.length; index < l; index++) {\n                if (data[index].__obj === $obj) {\n                    return index;\n                }\n            }\n\n            // Otherwise, create the item\n            data.push({__obj: $obj});\n            return data.length - 1;\n        }\n\n        function get($obj, key) {\n            var index = getIndex($obj);\n\n            if (data[index] && data[index][key]) {\n                return data[index][key];\n            } else {\n                return null;\n            }\n        }\n\n        function set($obj, key, val) {\n            var index = getIndex($obj);\n\n            if (typeof data[index] === 'undefined') {\n                data[index] = {};\n            }\n\n            data[index][key] = val;\n        }\n\n        return {\n            get: get,\n            set: set\n        }\n    }());\n\n    /**\n     * Reverse a string\n     */\n    function strReverse(str) {\n        return str.split('').reverse().join('');\n    }\n\n    /**\n     * Parse a date from a format\n     * e.g. parseDate('1990-07-26 07:24', 'yyyy-mm-ss hh:ii')\n     */\n    function parseDate(str, format) {\n        var parts = {};\n        if (typeof format === 'undefined') format = 'yyyy-mm-dd';\n        format.replace(/(dd|mm|yyyy|hh|ii)/g, function(match, type, start) {\n            parts[type] = str.substr(start, type.length);\n        });\n\n        return new Date(\n            parts.yyyy || 0,\n            (parts.mm - 1) || 0,\n            parts.dd || 1,\n            parts.hh || 0,\n            parts.ii || 0,\n            parts.ss || 0\n        );\n    }\n\n    /**\n     * Get the text content of a node\n     */\n    function textContent(node) {\n        return node.textContent;\n    }\n\n    function SortieInstance($table, options) {\n        // Get the variables we'll be using in this sortie object\n        var $body = $table.querySelector('tbody');\n        var $headers = $table.querySelectorAll('thead th');\n        var current;\n\n        /**\n        * Get the options object\n        */\n        function getOptions() {\n            var dataAttr = $table.attributes;\n            var dataOptions = {};\n            for (var i = 0, l = dataAttr.length; i < l; i++) {\n                var attr = dataAttr[i];\n\n                if (attr.name.substr(0, 11) === 'data-sortie' && attr.name.length > 11) {\n                    var normkey = attr.name.toLowerCase().replace(/-/g, '');\n                    dataOptions[normkey.substr(11)] = attr.value;\n                }\n            }\n\n            return Object.assign(true, {}, defaults, options, dataOptions);\n        }\n\n        /**\n         * Initialise sortie\n         */\n        function init() {\n            // Set the options object\n            options = getOptions();\n\n            // Determine the sort order\n            var sorts;\n            if (typeof options.sort !== 'undefined') {\n                sorts = options.sort;\n            } else {\n                sorts = $table.getAttribute('data-sortie');\n            }\n\n            // If there's no suitable sorting string, drop out\n            if (sorts === null) return false;\n\n            // If the sorts were a string, turn them into an object\n            if (typeof sorts === 'string') {\n                sorts = sorts.split('|');\n            }\n\n            if (sorts.length > $headers.length) {\n                console.error('Sortie config error: Too many sort columns specified');\n            }\n\n            // Add aria role-live settings and\n            $table.setAttribute('aria-atomic', true);\n            $table.setAttribute('aria-live', 'polite');\n            $table.setAttribute('aria-relevant', 'all');\n\n            // Generate an ID for the table\n            if (!$table.getAttribute('id')) {\n                $table.setAttribute('id', 'sortieTable' + (new Date() * 1));\n            }\n\n            // Add sortie specification to each column\n            for (var col in sorts) {\n                // Skip columns with no sort criteria\n                if (!sorts[col]) continue;\n\n                // Add a sorting icon to click\n                var $button = document.createElement('button');\n                $button.style.backgroundColor = 'transparent';\n                $button.style.border = 'none';\n                $button.innerHTML = options.markers.unsorted;\n                $button.setAttribute('type', 'button');\n                $button.setAttribute('aria-controls', $table.getAttribute('id'));\n\n                var $header = $headers[col];\n                $header.style.whiteSpace = 'nowrap';\n                $header.style.cursor = 'pointer';\n                $header.addEventListener('click', sortFactory(col));\n                $header.setAttribute('data-sortie', true);\n                _data.set($header, 'sortieCompareFunction', compareFactory(col, sorts[col]));\n                //$header.setAttribute('data-sortieButton', $button);\n                _data.set($header, 'sortieButton', $button);\n                $header.appendChild(document.createTextNode(' '));\n                $header.appendChild($button);\n            }\n\n            // Perform an initial sort\n            if (options.initialsort !== false) {\n                var opts = {};\n                if (options.initialsort.toString().substr(-1, 1) === 'D') {\n                    opts.dir = 'DESC';\n                } else if (options.initialsort.toString().substr(-1, 1) === 'A') {\n                    opts.dir = 'ASC';\n                } else if (options.initialsort.toString() === '-1') {\n                    for (var i = 0, l = sorts.length; i < l; i++) {\n                        if (sorts[i]) {\n                            options.initialsort = i;\n                            break;\n                        }\n                    }\n                }\n\n                sort(options.initialsort, opts);\n            }\n        }\n\n        // Factory for the sort function\n        function sortFactory(col) {\n            return function() {\n                sort(col);\n            }\n        }\n\n        /**\n         * Sort the table by the given column\n         */\n        function sort(col, opts) {\n            // Convert col to an integer\n            col = parseInt(col, 10);\n\n            var opts = Object.assign({}, opts);\n            var $th = $headers[col];\n            //var $btn = $th.getAttribute('data-sortieButton');\n            var $btn = _data.get($th, 'sortieButton');\n            var rows = Array.prototype.slice.call($body.querySelectorAll('tr'), 0);\n            var dir = typeof opts.dir !== 'undefined' ? opts.dir : 'ASC';\n\n            // Get the sort order\n            if (current === col && _data.get($th, 'sortieDirection') === 'ASC' && typeof opts.dir == 'undefined') {\n                dir = 'DESC';\n            }\n\n            // Save the new state\n            current = col;\n            _data.set($th, 'sortieDirection', dir);\n            $th.setAttribute('aria-sort', dir.toLowerCase() + 'ending')\n\n            // Perform the sort\n            rows.sort(_data.get($th, 'sortieCompareFunction'));\n\n            // Update the button's HTML\n            if (dir === 'DESC') {\n                $btn.innerHTML = options.markers.desc;\n                rows = rows.reverse();\n            } else {\n                $btn.innerHTML = options.markers.asc;\n            }\n\n            // Update the other buttons\n            //$headers.not($th).each(function(index, el) {\n            for (var i = 0, l = $headers.length; i < l; i++) {\n                var $el = $headers[i];\n                // Only update \"other\" buttons\n                if ($el === $th) continue;\n\n                // Reset each button\n                $el.removeAttribute('aria-sort');\n                if ($el.getAttribute('data-sortie')) {\n                    _data.get($el, 'sortieButton').innerHTML = options.markers.unsorted;\n                }\n            }\n\n            // Update the content of the now-sorted table\n            var frag = document.createDocumentFragment();\n\n            for (var i in rows) {\n                frag.appendChild(rows[i]);\n            }\n\n            // Put the now sorted rows back onto the page\n            $body.innerHTML = '';\n            $body.appendChild(frag);\n        }\n\n        /**\n         * Return the suitable comparison function for the column\n         */\n        function compareFactory(col, sortSpec) {\n            var bits = sortSpec.split(':');\n            var operation = bits[0];\n            var args = bits[1] ? bits[1].split(',') : [];\n            var callback = compareFunctions[operation];\n\n            if (typeof callback !== 'function') {\n                console.error('Sortie error: comparison function not found for rule \"' + operation + '\"');\n                var callback = function() {return 0};\n            }\n\n            return function compare(a, b) {\n                var cellA = a.children[col];\n                var cellB = b.children[col];\n\n                var order = callback.call(window, cellA, cellB, args);\n\n                // If asked to, reverse the search order\n                return sortSpec.substr(1, 1) === 'r' ? -order : order;\n            }\n        }\n\n        // Run the initialisation\n        init();\n\n        // Return values\n        return { sort: sort };\n    }\n\n    // Create a new sortie instance\n    function create(el, options) {\n        return new SortieInstance(el, options);\n    }\n\n    // Register a new comparison function\n    function registerComparison(codes, callback) {\n        if (typeof codes === 'string') codes = [codes];\n\n        // Register against each code provided\n        for (var i = 0, l = codes.length; i < l; i++) {\n            compareFunctions[codes[i]] = callback;\n        }\n    }\n\n    /*** Comparison functions ***/\n\n    // Compare alphanumerically\n    registerComparison(['a', 'alpha'], function compareAlpha(cellA, cellB) {\n        var ah = textContent(cellA).trim();\n        var bh = textContent(cellB).trim();\n        if (cellA.dir === 'rtl') ah = strReverse(ah);\n        if (cellB.dir === 'rtl') bh = strReverse(bh);\n        return ah.localeCompare(bh);\n    });\n\n    // Compare by date attributes\n    registerComparison(['d', 'date'], function compareDate(cellA, cellB, args) {\n        var dateFormat = args[0];\n        var dateA = parseDate(textContent(cellA), dateFormat);\n        var dateB = parseDate(textContent(cellB), dateFormat);\n\n        if (dateA > dateB) {\n            return 1;\n        } else if (dateA < dateB) {\n            return -1;\n        } else {\n            return 0;\n        }\n    });\n\n    // Compare integers\n    registerComparison(['i', 'int'], function compareInt(cellA, cellB) {\n        var aInt = parseInt(textContent(cellA), 10);\n        var bInt = parseInt(textContent(cellB), 10);\n        if (isNaN(bInt)) {\n            return isNaN(aInt) ? 0 : 1;\n        } else if (isNaN(aInt)) {\n            return -1;\n        } else {\n            return aInt - bInt;\n        }\n    });\n\n    /**\n     * Return public methods\n     */\n    return {\n        registerComparison: registerComparison,\n        create: create\n    };\n}));\n"],"sourceRoot":"/source/"}